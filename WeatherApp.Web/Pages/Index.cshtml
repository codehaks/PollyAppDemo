@page
@model IndexModel
@{
    ViewData["Title"] = "Weather Dashboard";
}

<div class="weather-container">
    <div class="weather-header">
        <h1 class="display-4">🌤️ Global Weather Dashboard</h1>
        <p class="lead">Real-time weather information for major cities around the world</p>
    </div>

    @if (Model.IsLoading)
    {
        <div class="loading-container">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-3">Fetching weather data...</p>
        </div>
    }
    else if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            <h4 class="alert-heading">⚠️ Error</h4>
            <p>@Model.ErrorMessage</p>
        </div>
    }
    else
    {
        <div class="weather-grid">
            @foreach (var weather in Model.WeatherData)
            {
                <div class="weather-card">
                    <div class="weather-card-header">
                        <h3 class="city-name">@weather.City</h3>
                        <div class="weather-icon">
                            @{
                                string icon;
                                if (weather.TemperatureC < 0)
                                {
                                    icon = "❄️";
                                }
                                else if (weather.TemperatureC < 10)
                                {
                                    icon = "🌧️";
                                }
                                else if (weather.TemperatureC < 20)
                                {
                                    icon = "⛅";
                                }
                                else if (weather.TemperatureC < 30)
                                {
                                    icon = "☀️";
                                }
                                else
                                {
                                    icon = "🔥";
                                }
                            }
                            @icon
                        </div>
                    </div>
                    <div class="weather-card-body">
                        <div class="temperature">
                            <span class="temp-celsius">@weather.TemperatureC°C</span>
                            <span class="temp-fahrenheit">@weather.TemperatureF°F</span>
                        </div>
                        <div class="weather-summary">@weather.Summary</div>
                        <div class="weather-date">@weather.Date.ToString("MMM dd, yyyy")</div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    .weather-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
        min-height: 100vh;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .weather-header {
        text-align: center;
        margin-bottom: 3rem;
        color: white;
    }

    .weather-header h1 {
        font-weight: 700;
        margin-bottom: 1rem;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
    }

    .weather-header .lead {
        font-size: 1.25rem;
        opacity: 0.9;
    }

    .loading-container {
        text-align: center;
        color: white;
        padding: 4rem 0;
    }

    .weather-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1.5rem;
        margin-top: 2rem;
    }

    .weather-card {
        background: rgba(255, 255, 255, 0.95);
        border-radius: 20px;
        padding: 1.5rem;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .weather-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);
    }

    .weather-card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    .city-name {
        font-size: 1.5rem;
        font-weight: 600;
        color: #2c3e50;
        margin: 0;
    }

    .weather-icon {
        font-size: 2.5rem;
        filter: drop-shadow(2px 2px 4px rgba(0,0,0,0.1));
    }

    .weather-card-body {
        text-align: center;
    }

    .temperature {
        margin-bottom: 0.5rem;
    }

    .temp-celsius {
        font-size: 2.5rem;
        font-weight: 700;
        color: #e74c3c;
        display: block;
    }

    .temp-fahrenheit {
        font-size: 1.2rem;
        color: #7f8c8d;
        display: block;
    }

    .weather-summary {
        font-size: 1.1rem;
        color: #34495e;
        font-weight: 500;
        margin-bottom: 0.5rem;
        text-transform: capitalize;
    }

    .weather-date {
        font-size: 0.9rem;
        color: #95a5a6;
        font-weight: 400;
    }

    .alert {
        border-radius: 15px;
        border: none;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    @@media (max-width: 768px) {
        .weather-container {
            padding: 1rem;
        }
        
        .weather-grid {
            grid-template-columns: 1fr;
            gap: 1rem;
        }
        
        .weather-card {
            padding: 1rem;
        }
        
        .city-name {
            font-size: 1.3rem;
        }
        
        .temp-celsius {
            font-size: 2rem;
        }
    }
</style>
